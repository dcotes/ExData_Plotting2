swirl()
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb", col.axis="blue", col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab="red")
title("Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title("Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par('fg')
par("pch")
par("lty")
?plot
plot(airquality$Wind, airquality$Ozone, type="n")
title("Wind and Ozone in NYC")
table(airquality$Month)
may <- subset(airquality, Month==5)
?points
points(may$Wind, may$Ozone, col="blue", pch="triangle")
?pch
pch(1:18)
pch(0:18)
points(pch(0:18))
points(may$Wind, may$Ozone, col="blue", pch=17)
notmay <- subset(airquality, Month!=5)
?pch
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
?legend
legend("topright", pch = c(17, 8), col= c("blue", "red"), legend=c("May", "Other Months"))
lines(median(airquality$Wind), lty=2, lwd=2)
abline(median(airquality$Wind), lty=2, lwd=2)
abline(v=median(airquality$Wind), lty=2, lwd=2)
abline(V=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4, 4, 2, 1), oma= c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=T)
mtext("Ozone and Weather in New York City", outer=TRUE)
head(airquality)
xyplot(Ozone~Wind, data=airquality)
xyplot(Ozone~Wind, data=airquality, col="red", pch=8, main="Big Apple Data")
play()
xyplot(Ozone~Wind, data=airquality, col="green", pch=8, main="Big Apple Data")
xyplot(Ozone~Wind, data=airquality, col="dark green", pch=8, main="Big Apple Data")
xyplot(Ozone~Wind, data=airquality, col="dark green", pch=4, main="Big Apple Data")
nxt()
xyplot(Ozone~Wind | as.factor(Month), data=airquality, layout = c(5,1))
xyplot(Ozone~Wind | Month, data=airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind, data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout= c(2,1))
v1
v2
myedit("plot.R")
myedit("plot1.R")
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat | color*cut, data=diamonds)
xyplot(price~carat | color*cut, data=diamonds, strip=FALSE, pch=20, xlab="myxlab", ylab="myylab", main="myylab")
xyplot(price~carat | color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=myylab)
xyplot(price~carat | color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat | color*cut, data=diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
sample(colors(), 10)
lzy
play()
365*400
365*400 - 3
365.25*400 - 3
365.24*400 - 3
365.25*400 - 3
plot(unique(weekdays$interval), weekdayavg,
type = "l", xlab = "5 Minute Intervals", ylab = "Weekday Average Number of Steps")
plot(unique(weekends$interval), weekendavg,
type = "l", xlab = "5 Minute Intervals", ylab = "Weekend Average Number of Steps")
parm(c(2,1))
par(mfrow(c(1, 2)))
par(mfrow = c(1, 2))
plot(unique(weekdays$interval), weekdayavg,
type = "l", xlab = "5 Minute Intervals", ylab = "Weekday Average Number of Steps")
plot(unique(weekends$interval), weekendavg,
type = "l", xlab = "5 Minute Intervals", ylab = "Weekend Average Number of Steps")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?axis
?trellis.par.set
?text
?panel.lmline
?points
?text
?panel.lmline
head(train_lab)
train <- read.table("~/Desktop/UCI HAR Dataset/train/X_train.txt")
test <- read.table("~/Desktop/UCI HAR Dataset/test/X_test.txt")
test
test
train <- read.table("~/Desktop/UCI HAR Dataset/train/X_train.txt")
test <- read.table("~/Desktop/UCI HAR Dataset/test/X_test.txt")
merged <- rbind(train, test)
train_lab <- read.table("~/Desktop/UCI HAR Dataset/train/y_train.txt")
test_lab <- read.table("~/Desktop/UCI HAR Dataset/test/y_test.txt")
merged_labels <- rbind(train_lab, test_lab)
merged_Labels <- activities$V2[merged_labels[,1]]
activities <- read.table("~/Desktop/UCI HAR Dataset/activity_labels.txt")
merged_Labels <- activities$V2[merged_labels[,1]]
head(merged_labels)
tail(merged_labels)
merged_labels <- rbind(train_lab, test_lab)
head(merged_labels)
merged_labels <- activities$V2[merged_labels[,1]]
head(merged_labels)
train_sub <- read.table("~/Desktop/UCI HAR Dataset/train/subject_train.txt")
test_sub <- read.table("~/Desktop/UCI HAR Dataset/test/subject_test.txt")
merged_subjects <- rbind(train_sub, test_sub)
merged_info <- cbind(merged_subjects, merged_labels)
colnames(merged_info) <- c("Subject", "Activity")
head(merged_info)
features <- as.character(read.table("~/Desktop/UCI HAR Dataset/features.txt")[,2])
features <- gsub('[-()]', '', features)
feature_subset <- grep(".mean.|.std.", features)
merged_sub <- merged[,feature_subset]
merged_sub[1,]
head(merged_labels)
merged_info[1,]
tidy_data <- cbind(merged_info, merged_sub)
tidy_data[1,]
View(tidy_data)
rm(tidy_data)
merged_sub
merged_labels <- activities$V2[merged_labels[,1]]
dim(activites)
dim(activities)
features
feature_subset
merged_sub <- merged[,feature_subset]
merged_sub[1,]
features
names(merged_sub) <- features[feature_subset]
merged_sub[1,]
tidy_data <- cbind(merged_info, merged_sub)
tidy_data[1,]
tidy_data[2,]
View(tidy_data)
?group_by
?summarize
?sapply
class(tidy_data$Activity)
?levels
levels(tidy_data$Activity)
?ddply
library(plyr)
?ddply
a <- ddply(tidy_data, Activity, mean())
a <- ddply(tidy_data, activity, mean)
a <- ddply(tidy_data, mean)
a <- ddply(tidy_data, group(Activity), mean())
a <- ddply(tidy_data, .(group, Activity), mean())
a <- ddply(tidy_data, .(Activity), mean())
a <- ddply(tidy_data, .(Activity), mean(x))
a <- ddply(tidy_data, .(Activity), mean(tidy_data[,3..]))
a <- ddply(tidy_data, .(Activity), mean(tidy_data[,3:]))
a <- ddply(tidy_data, .(Activity), mean(tidy_data[,3:63]))
a <- ddply(tidy_data, .(Activity), mean)
a <- ddply(tidy_data, Activity ~ variable, mean)
a <- ddply(tidy_data, Activity ~ mean)
library(dplyr)
summarize(tidy_data)
head(tidy_data)
dim(tidy_data)
summarize(tidy_data)
?group
swirl()
someColMeans <- function(data) { colMeans(data[,-c(1,2)]) }
tidyMeans <- ddply(tidy_data, .(Subject, Activity), someColMeans)
head(tidyMeans)
dim(tidyMeans)
rm(tidyMeans)
tidy_summary <- ddply(tidy_data, .(Subject, Activity), someColMeans)
tidy_summary
View(tidy_summary)
View(tidy_summary)
?write.table
write.table(tidy_summary, "tidy.txt", row.name=FALSE)
?summarize_each
library(dplyr)
?summarize_each
??summarize_each
?summarise_each
url <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, "~/Desktop/community.csv")
?read.table
data <- read.table("community.csv")
str(data)
head(data)
splitnames <- strsplit("wgtp"(data))
?strsplit
splitnames <- strsplit(data[,1], "wgtp")
head(data[,1])
str(data)
data$wgtp
splitnames <- strsplit(data)
splitnames <- strsplit(data, "wgtp")
split <- data(strsplit("wgtp"))
dim(data)
strsplit(data)
strsplit(data[,1])
strsplit(data[,1], "wgtp")
View(data)
View(data)
str(data)
strsplit(data)
strsplit(data, "/wgtp/")
strsplit(data, wgtp)
strsplit(data, "wgtp")
strsplit(data(names), "wgtp")
names(data)
varnames <- names(data)
splitnames <- strsplit(varnames, "wgtp")
splitnames
splitnames[123]
splitnames[[123]]
libraray(data.table)
library(data.table)
data <- data.table(read.csv("community.csv"))
str(data)
head(data)
names(data)
varnames <- names(data)
strsplit(varnames, "wgtp")
strsplit(varnames, "wgtp")[[158]]
strsplit(varnames, "wgtp")[[123]]
url <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url, "gdp.csv")
gdp <- data.table(read.csv("gdp.csv"))
str(gdp)
View(gdp)
View(gdp)
View(gdp)
View(gdp)
View(data)
View(data)
names(gdp)
sub("", ",", gdp$V.3,)
View(gdp)
View(gdp)
sub("", ",", gdp$X.3,)
gdp <- data.table(read.csv("gdp.csv"))
sub(",", "", gdp$X.3,)
sub(",", "", gdp$X.3,)
View(gdp)
View(gdp)
gdpclean <- gsub(",", "", gdp[,5])
gdpclean
head(gdp[,5])
head(gdp[5,])
head(gdp$X.3)
gdpclean <- gsub(",", "", gdp$X.3)
gdpclean
mean(gdpclean)
as.numeric(gdpclean)
mean(gdpclean, na.rm=T)
gdpclean <- !(is.na[gdpclean])
gdpclean <- !is.na[gdpclean]
?is.na
clean <- !(is.na(gdpclean))
celan
clean
clean <- !(is.na(gdpclean))[gdpclean]
clean
clean <- (!is.na(gdpclean))[gdpclean]
clean
gdpclean
?as.numeric
clean <- as.numeric(gdpclean, na.rm=TRUE)
clean
cleangdp <- cleangdp[!is.na(cleangdp)]
clean
clean <- clean[!is.na(clean)]
clean
mean(clean)
str(clean)
newclean <- clean[5:219,]
newclean <- clean[5:190]
mean(newclean)
newclean(first)
first(newclean)
last(newclean)
mean(gdpv, na.rm=TRUE)
gdp <- gdp[X != ""]
gdp <- dtgdp[, list(X, X.1, X.3, X.4)]
setnames(dtgdp, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
gdpv <- as.numeric(gsub(",", "", dtGDP$gdp))
mean(gdpv, na.rm=TRUE)
gdpv <- as.numeric(gsub(",", "", dtGDP$gdp))
gdpv <- as.numeric(gsub(",", "", gdp$gdp))
mean(gdpv, na.rm=TRUE)
gdpv
dtGDP <- data.table(read.csv("gdp.csv", skip=4, nrows=215, stringsAsFactors=FALSE))
dtGDP <- data.table(read.csv("gdp.csv", skip=4, nrows=215, stringsAsFactors=FALSE))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
gdp <- as.numeric(gsub(",", "", dtGDP$gdp))
mean(gdp, na.rm=TRUE)
gdp
grep("^United", dtGDP$Long.Name)
dtGDP$Long.Name
names <- dtGDP$Long.Name
grep("United$", names)
grep("*United", names)
?grep
grepl("^United", names)
isunited <- grepl("^United", names)
summary(isunited)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url, "edu.csv")
url <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url, "edu.csv")
dtEDU <- data.table(read.csv("edu.csv"))
summary(dtEDU)
View(dtEDU)
View(dtEDU)
url2 <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url2, "edu.csv")
dtEDU <- data.table(read.csv("edu.csv"))
View(dtEDU)
View(dtEDU)
?
?mere
?merge
merged <- merge(dtGDP, dtEDU, all=TRUE, by=c("Country Code"))
merged <- merge(dtGDP, dtEDU, all=TRUE, by=c("CountryCode"))
View(merged)
View(merged)
isFiscalYearEnd <- grepl("fiscal year end", tolower(dt$Special.Notes))
isFiscalYearEnd <- grepl("fiscal year end", tolower(merged$Special.Notes))
isJune <- grepl("june", tolower(merged$Special.Notes))
table(isFiscalYearEnd, isJune)
dt[isFiscalYearEnd & isJune, Special.Notes]
merged[isFiscalYearEnd & isJune, Special.Notes]
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
grepl("2015*", sampleTimes)
length(grepl("2015*", sampleTimes))
grepl("2012*", sampleTimes)
length(grepl("2012*", sampleTimes))
length(grepl("2012", sampleTimes))
sampleTimes
addmargins(table(year(sampleTimes), weekdays(sampleTimes)))
408000/765
2.5/8.5
sun_rad <- 696000
earth_rad <- 6371
27/2
.3*0.5*696000
696000/4.5
*.3
a <- 696000/4.5
a*.3
b <- a*.3
b
c <- 46400/6371
c
14.5/2
sun_rad/7.25
96000*2.5
sun_rad/6.25
111360*9.5
111360*9.5 - 96000*2.5
d< - 111360*9.5 - 96000*2.5
d <- 111360*9.5 - 96000*2.5
d
d/(696000*2)
d/(696000*2)/2
5/29
5/29*100
s <- 5/29*100
s
p <- (s*365.25)/(s+365.25)
p
b <- a*.2
b
b/6371
earth_vol <- (4/3)*pi*(6371^3)
earth_vol
sun_vol <- (4/3)*pi*(696000^3)
sun_vol
sun_vol/earth_vol
6^3
216/24
220000/20000
2*pi*696000
696000*4
2*1700
85/20
1700/900
15000/1700
1700/900
17/9
100^2
100^2*.0006
.002*3
0.01*2
32-25
47*5
60*-.02
as.fraction(-1.2)
fraction(-1.2)
?fraction
-1.2>Frac
fractions(-1.2)
-6/5
50*-.02
0.5/0.25
225/3
sqrt(75)
225*.25
20/8
20000/8000
22/35
22/35*25
23/35*25
23/35
100^2
5/10000000
2.45*.12
150^2
sqrt(150^2 + 200^2)
(200*50)/250
19^2
160/(361*pi)_
160/(361*pi)
400*50
f <- function(x) {}
f <- function(x) {
14x^3 - 21x^2 -84x + 7
}
14*x^3 - 21*x^2 -84*x + 7
f <- function(x) {
14*x^3 - 21*x^2 -84*x + 7
}
f(-2)
f(3)
f(-1)
f(2)
f(2)
f(-1)
f
f(0)
f(-2)
f(-1)
f(2)
f(3)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
getwd()
setwd("/Users/Dakota/Deskotp/ExData_Plotting2")
getwd()
setwd("/Users/Dakota/Desktop/ExData_Plotting2/")
dir()
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
library(ggplot2)
dt <- data.table(NEI)
library(plyr)
dt <- data.table(NEI)
?data.table
dt <- data.frame(NEI)
View(dt)
View(dt)
length(dt$year)
class(dt$year)
dt$year <- as.factor(dt$year)
class(dt$year)
byYear <- ddply(dt, ~year, sum=sum(Emissions))
head(byYear)
byYear <- ddply(dt, ~year, summarize, sum=sum(Emissions))
byYear
?ddply
?plot
plot(byYear)
plot(byYear, main="Total Emissions 1999-2008", xlab="Year", ylab="Total Emissions")
barplot(byYear, main="Total Emissions 1999-2008", xlab="Year", ylab="Total Emissions")
barplot(byYear$sum ~barplot$year, main="Total Emissions 1999-2008", xlab="Year", ylab="Total Emissions")
barplot(byYear$sum, barplot$year, main="Total Emissions 1999-2008", xlab="Year", ylab="Total Emissions")
plot(byYear, main="Total Emissions 1999-2008", xlab="Year", ylab="Total Emissions")
plot(byYear, main="Total PM2.5 Emissions 1999-2008", xlab="Year", ylab="Total Emissions")
plot(byYear, main="Total PM2.5 Emissions 1999-2008", xlab="Year", ylab="Total Emissions (tons)")
plot(byYear, main="Total PM2.5 Emissions 1999-2008", xlab="Year", ylab="Total(tons)")
plot(byYear, main="Total PM2.5 Emissions 1999-2008", xlab="Year", ylab="Total (tons)")
